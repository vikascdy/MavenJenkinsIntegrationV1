 -----
 Metric Collection Service
 -----
 William Clements
 -----
 2/12/2014
 -----

Metric Collection Service

  The Metric Colletion service is out central control and collection point for the metrics within the cluster. There are many tools that can and will be used to aggigate, use, and make sense of the metrics from across the cluster.
  
  // TODO: This information is not complete
  
*Graphite Reporter

  Coda hale has inbuilt support to send the metric data to Graphite. We can also using custom code to send the any metric data to graphite to plot real time time series graph without using coda-hale metric API. 

  [[1]] Send the metric data to Graphite_HOST: 2003 port 

  [[2]] Sample code is sending the metric data using Socket API 

+-----------------------------+
  private void logToGraphite(String nodeIdentifier, Map<String, Object> stats) throws Exception  {
    Long curTimeInSec = System.currentTimeMillis() / 1000;
    StringBuffer lines = new StringBuffer();
    for (Map.Entry entry : stats.entrySet()) {
      String key = nodeIdentifier + "." + entry.getKey();
      lines.append(key).append(" ").append(entry.getValue()).append(" ").append(curTimeInSec).append("\n");
    }
    logToGraphite(lines);
  }
  
  private void logToGraphite(StringBuffer lines) throws Exception {
    String msg = lines.toString();
    logger.info("Writing [{}] to graphite", msg);
    Socket socket = new Socket(graphiteHost, graphitePort);
    try {
      Writer writer = new OutputStreamWriter(socket.getOutputStream());
      writer.write(msg);
      writer.flush();
      writer.close();
    } catch (Exception e) {
      e.printStackTrace();
    } finally {
      socket.close();
    }
  } 

+-----------------------------+
  
[./image/graphite.png]

*Zabbix Reporter

  We can send metric data to zabbix using following way and it is send as JSON which can be monitored real-time in Zabbix 

  [[1]] Create JSON with host, key, value. Where key,value pair is metric name and its value.  

+--------------------------------+
{
  "request" : "sender data", 
  "data" : [{ 
    "host" : "Server_TM_01", 
    "key" : "traffic_inbound", 
    "value" : "1045" 
  }] 
} 
+--------------------------------+

  [[2]] Encrypt it with Base 64 and convert to byte stream 

  [[3]] Send this byte stream to zabbix_server:10051 port 

  [[4]] Configure the zabbix for host “Server_TM_01” with new item like “traffic_inbound” 

  [[5]] Under Monitoring option of zabbix, we can see the traffic or custom graphs for this metric. 

  [[6]] When we send any JSON to zabbix, it sends back the acknowledgement JSON with success, failure message for sent information. 

[./image/zabbix.png]

  As shown in image captured to display the traffic graph of PC where we are sending the metric data from Java program to zabbix and it is displayed using custom chart. 


*Metering POC using Annotation & aspectJ 

  We can annotate the command or service method like using this POC 
  
+-------------------------------+
    @Counted(name = "counter") 
    public String getTitleById(int id) { 
        try { 
            return data.get(id); 
        } catch (Exception e) { 
            e.printStackTrace(); 
            return e.getMessage(); 
        } 
    } 
+-------------------------------+

  POC code has been checked in along with Zabbix & Graphite reporter 

  {{https://ecsvn01.edifecs.local/engineering/prototypes/sharedservices/metering_poc}} 

