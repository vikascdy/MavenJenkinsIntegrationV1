// GENERATED SOURCE FILE - DO NOT MODIFY
// ---
// This proxy class is generated automatically during the build process based
// on the annotations in another source file. Any changes will be overwritten the
// next time the project is built.
// ---
package com.edifecs.epp.security.handler.rest

import com.edifecs.epp.isc.Args

class __GeneratedProxy__IOrganizationHandler(isc: com.edifecs.epp.isc.Isc, serviceTypeName: java.lang.String) extends IOrganizationHandler {
  def address = isc.getAddressRegistry.getAddressForServiceTypeName(serviceTypeName)
  override def get($arg0: java.lang.String) = throw new java.lang.UnsupportedOperationException("This method cannot be accessed remotely.")
  override def put($arg0: java.lang.String, $arg1: com.edifecs.epp.security.data.Organization) = throw new java.lang.UnsupportedOperationException("This method cannot be accessed remotely.")
  override def list($arg0: com.edifecs.epp.isc.core.command.Pagination) = throw new java.lang.UnsupportedOperationException("This method cannot be accessed remotely.")
  override def delete($arg0: java.lang.String) = throw new java.lang.UnsupportedOperationException("This method cannot be accessed remotely.")
  override def post($arg0: com.edifecs.epp.security.data.Organization) = throw new java.lang.UnsupportedOperationException("This method cannot be accessed remotely.")
  override def createOrganization(organization: com.edifecs.epp.security.data.Organization) = isc.sendSync(address, "organization.createOrganization", Map[String, java.io.Serializable](("organization", organization))).asInstanceOf[com.edifecs.epp.security.data.Organization]
  override def createOrganizationForTenant(tenant: com.edifecs.epp.security.data.Tenant, organization: com.edifecs.epp.security.data.Organization) = isc.sendSync(address, "organization.createOrganizationForTenant", Map[String, java.io.Serializable](("tenant", tenant), ("organization", organization))).asInstanceOf[com.edifecs.epp.security.data.Organization]
  override def updateRealm(realm: com.edifecs.epp.security.data.SecurityRealm, organizationId: java.lang.Long) = isc.sendSync(address, "organization.updateRealm", Map[String, java.io.Serializable](("realm", realm), ("organizationId", organizationId))).asInstanceOf[com.edifecs.epp.security.data.SecurityRealm]
  override def deleteOrganization(id: java.lang.Long) = isc.sendSync(address, "organization.deleteOrganization", Map[String, java.io.Serializable](("id", id)))
  override def deleteOrganizations(ids: java.util.ArrayList[java.lang.Long]) = isc.sendSync(address, "organization.deleteOrganizations", Map[String, java.io.Serializable](("ids", ids)))
  override def getOrganizationById(id: java.lang.Long) = isc.sendSync(address, "organization.getOrganizationById", Map[String, java.io.Serializable](("id", id))).asInstanceOf[com.edifecs.epp.security.data.Organization]
  override def updateOrganization(organization: com.edifecs.epp.security.data.Organization) = isc.sendSync(address, "organization.updateOrganization", Map[String, java.io.Serializable](("organization", organization))).asInstanceOf[com.edifecs.epp.security.data.Organization]
  override def getChildOrganizationsById(organizationId: java.lang.Long) = isc.sendSync(address, "organization.getChildOrganizationsById", Map[String, java.io.Serializable](("organizationId", organizationId))).asInstanceOf[java.util.Collection[com.edifecs.epp.security.data.Organization]]
  override def getOrganizationDetail(organizationId: java.lang.Long) = isc.sendSync(address, "organization.getOrganizationDetail", Map[String, java.io.Serializable](("organizationId", organizationId))).asInstanceOf[com.edifecs.epp.security.data.OrganizationDetail]
  override def getOrganizationsForTenant(id: java.lang.Long, startRecord: Long, recordCount: Long) = isc.sendSync(address, "organization.getOrganizationsForTenant", Map[String, java.io.Serializable](("id", id), ("startRecord", startRecord), ("recordCount", recordCount))).asInstanceOf[com.edifecs.epp.security.data.PaginatedList[com.edifecs.epp.security.data.Organization]]
  override def getOrganizationsForGroup(id: java.lang.Long, startRecord: Long, recordCount: Long) = isc.sendSync(address, "organization.getOrganizationsForGroup", Map[String, java.io.Serializable](("id", id), ("startRecord", startRecord), ("recordCount", recordCount))).asInstanceOf[com.edifecs.epp.security.data.PaginatedList[com.edifecs.epp.security.data.Organization]]
  override def addChildOrganization(organizationId: java.lang.Long, childOrganizationId: java.lang.Long) = isc.sendSync(address, "organization.addChildOrganization", Map[String, java.io.Serializable](("organizationId", organizationId), ("childOrganizationId", childOrganizationId)))
  override def removeChildOrganization(organizationId: java.lang.Long, childOrganizationId: java.lang.Long) = isc.sendSync(address, "organization.removeChildOrganization", Map[String, java.io.Serializable](("organizationId", organizationId), ("childOrganizationId", childOrganizationId)))
  override def removeRoleFromOrganization(organizationId: java.lang.Long, roleId: java.lang.Long) = isc.sendSync(address, "organization.removeRoleFromOrganization", Map[String, java.io.Serializable](("organizationId", organizationId), ("roleId", roleId)))
  override def removeRolesFromOrganization(organizationId: java.lang.Long, roles: java.util.ArrayList[com.edifecs.epp.security.data.Role]) = isc.sendSync(address, "organization.removeRolesFromOrganization", Map[String, java.io.Serializable](("organizationId", organizationId), ("roles", roles)))
  override def addRoleToOrganization(organizationId: java.lang.Long, roleId: java.lang.Long) = isc.sendSync(address, "organization.addRoleToOrganization", Map[String, java.io.Serializable](("organizationId", organizationId), ("roleId", roleId)))
  override def addRolesToOrganization(organizationId: java.lang.Long, roles: java.util.ArrayList[com.edifecs.epp.security.data.Role]) = isc.sendSync(address, "organization.addRolesToOrganization", Map[String, java.io.Serializable](("organizationId", organizationId), ("roles", roles)))
  override def addRealmToOrganization(realm: com.edifecs.epp.security.data.SecurityRealm, organizationId: java.lang.Long) = isc.sendSync(address, "organization.addRealmToOrganization", Map[String, java.io.Serializable](("realm", realm), ("organizationId", organizationId))).asInstanceOf[com.edifecs.epp.security.data.SecurityRealm]
  override def importOrganizationFromJson(inputStream: java.io.InputStream) = isc.sendSync(address, "organization.importOrganizationFromJson", Map[String, java.io.Serializable](("inputStream", com.edifecs.epp.isc.stream.MessageStream.fromInputStream(inputStream)))).asInstanceOf[java.lang.String]
  override def validateImportOrganization(inputStream: java.io.InputStream) = isc.sendSync(address, "organization.validateImportOrganization", Map[String, java.io.Serializable](("inputStream", com.edifecs.epp.isc.stream.MessageStream.fromInputStream(inputStream)))).asInstanceOf[java.lang.String]
  override def restCommand($2dx$2drest$2dmethod: java.lang.String, $2dx$2durl$2dsuffix: java.lang.String, $2dx$2drequest$2dbody: com.edifecs.epp.isc.json.JsonArg, page: java.lang.Long, start: java.lang.Long, limit: java.lang.Long, query: java.lang.String, sort: java.lang.String, filter: java.lang.String) = isc.sendSync(address, "organization", Map[String, java.io.Serializable](("-x-rest-method", $2dx$2drest$2dmethod), ("-x-url-suffix", $2dx$2durl$2dsuffix), ("-x-request-body", $2dx$2drequest$2dbody), ("page", page), ("start", start), ("limit", limit), ("query", query), ("sort", sort), ("filter", filter))).asInstanceOf[java.io.Serializable]
}