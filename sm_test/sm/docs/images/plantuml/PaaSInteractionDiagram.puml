@startuml

package "" <<Cloud>> {
  package AppStore <<Rect>> {
    interface ESM {
      + listApps
      + listCartridges
      + listComponents
      ==App Content==
      + downloadComponent
      + downloadApp
      + downloadCartridge
    }

    interface DockerRepo {
      + downloadDocker
    }

  }
}

package "" <<Rect>> {
  package ECM {
    interface ECM {
      + listApps --tenant <tenant>
      + listCartridges -tenant <tenant>
      + getAppConfig -tenant <tenant> -app <app>
      + getAppManifest -tenant <tenant> -app <app>
      + getCartridgeConfig -tenant <tenant> -app <app>
      + getCartridgeManifest -tenant <tenant> -app <app>
    }

    interface NativeScheduler {
        schedule(uri, scheduling)
    }

    class ServiceScheduler {
        schedule(uri, scheduling)
    }

    ECM --|> NativeScheduler
    ECM --|> ServiceScheduler
    ServiceScheduler ..left.. NativeScheduler

}

package SMHost as SMDocker {

  interface ServiceContainer {
    + installApp
    + startService
    + stopService
  }

}

  package UI {
    interface SiteAdminUI {

    }
    interface EIMProfile {

    }
  }

  package DataStores <<Database>> {
    interface ContentRepository {
        addFile(file)
    }
    interface NavigationService {
        addMenuItem(menuItem)
    }
    interface FlexFields {
        addFlexFieldDefinition(flexFieldDefinition)
    }
  }

}

ECM --|> ESM : Available Applications\nDownloads Application Package
UI --|> ECM : Installed Applications\nManifest Configurations\nAvailable Applications

NativeScheduler --|> DockerRepo : Downloads and Deploys Docker Images
NativeScheduler --|> SMDocker : Executes the Docker Container

ServiceScheduler --|> ServiceContainer : Installs and runs Applications
SMDocker --|> ECM : Downloads Application Package

SMDocker --|> ContentRepository : Load Artifacts
SMDocker --|> NavigationService : Load Menu Options
SMDocker --|> FlexFields : Load Flex Fields

@enduml